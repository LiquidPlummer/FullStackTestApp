{"ast":null,"code":"import { throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class RemoteService {\n  constructor(http) {\n    this.baseURL = 'http://localhost:7777';\n    this.http = http;\n  }\n  post(testModel) {}\n  // Error handling\n  errorHandler(error) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      // Get client-side error\n      errorMessage = error.error.message;\n    } else {\n      // Get server-side error\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    console.log(errorMessage);\n    return throwError(errorMessage);\n  }\n}\nRemoteService.ɵfac = function RemoteService_Factory(t) {\n  return new (t || RemoteService)(i0.ɵɵinject(i1.HttpClient));\n};\nRemoteService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: RemoteService,\n  factory: RemoteService.ɵfac,\n  providedIn: 'root'\n});\nexport class TestModel {\n  constructor(message, id) {\n    this.message = message;\n    this.id = id;\n  }\n}","map":{"version":3,"mappings":"AAGA,SAAqBA,UAAU,QAAQ,MAAM;;;AAK7C,OAAM,MAAOC,aAAa;EAIxBC,YAAYC,IAAgB;IAF5B,YAAO,GAAW,uBAAuB;IAGvC,IAAI,CAACA,IAAI,GAAGA,IAAI;EAClB;EAEAC,IAAI,CAACC,SAAoB,GAEzB;EAME;EACAC,YAAY,CAACC,KAAU;IACrB,IAAIC,YAAY,GAAG,EAAE;IACrB,IAAID,KAAK,CAACA,KAAK,YAAYE,UAAU,EAAE;MACrC;MACAD,YAAY,GAAGD,KAAK,CAACA,KAAK,CAACG,OAAO;KACnC,MAAM;MACL;MACAF,YAAY,GAAG,eAAeD,KAAK,CAACI,MAAM,cAAcJ,KAAK,CAACG,OAAO,EAAE;;IAEzEE,OAAO,CAACC,GAAG,CAACL,YAAY,CAAC;IACzB,OAAOR,UAAU,CAACQ,YAAY,CAAC;EACjC;;AA5BSP,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAa,SAAbb,aAAa;EAAAc,YAFZ;AAAM;AAiCpB,OAAM,MAAOC,SAAS;EAGpBd,YAAYQ,OAAe,EAAEO,EAAW;IACtC,IAAI,CAACP,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACO,EAAE,GAAGA,EAAE;EACd","names":["throwError","RemoteService","constructor","http","post","testModel","errorHandler","error","errorMessage","ErrorEvent","message","status","console","log","factory","providedIn","TestModel","id"],"sourceRoot":"","sources":["C:\\Training\\FullStackTestApp\\client\\FullStackTestClient\\src\\app\\remote.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { catchError, retry } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RemoteService {\n  http: HttpClient;\n  baseURL: string = 'http://localhost:7777'\n\n  constructor(http: HttpClient) {\n    this.http = http;\n  }\n\n  post(testModel: TestModel) {\n\n  }\n\n\n\n\n\n    // Error handling\n    errorHandler(error: any) {\n      let errorMessage = '';\n      if (error.error instanceof ErrorEvent) {\n        // Get client-side error\n        errorMessage = error.error.message;\n      } else {\n        // Get server-side error\n        errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n      }\n      console.log(errorMessage);\n      return throwError(errorMessage);\n    }\n}\n\nexport class TestModel {\n  id?: number;\n  message: String;\n  constructor(message: String, id?: number) {\n    this.message = message;\n    this.id = id;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}